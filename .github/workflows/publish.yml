name: Build and Publish

on: [push]

jobs:
  build:
    name: Build and Publish to Server
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Pull Project
        uses: actions/checkout@v3.5.2

      - name: cache deno installation and deno.land dependencies
        uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.os }}-deno-${{ hashFiles('**/*') }}
          restore-keys: ${{ runner.os }}-deno-
          path: |
            /home/runner/.deno
            /home/runner/.cache/deno/deps/*

      - name: install or update deno installation
        run: |
            export DENO_INSTALL="/home/runner/.deno"
            export PATH="${DENO_INSTALL}/bin:${PATH}"
            mkdir -p "${DENO_INSTALL}"
            deno upgrade || (
            curl -fsSL https://deno.land/x/install/install.sh > "${DENO_INSTALL}/.sh";
            sh "${DENO_INSTALL}/.sh"
            )
            echo "DENO_INSTALL=${DENO_INSTALL}" >> $GITHUB_ENV
            echo "PATH=${PATH}" >> $GITHUB_ENV
            deno upgrade

      - name: fetch any uncached dependencies
        run: |
            deno cache --reload=file: ./main.ts

      - name: Compile
        run: deno compile -A --output bbn-bot main.ts

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: "ghcr.io/bbn-holding/bbn-bot:latest"

      - name: Set up Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure Kubernetes credentials
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBE_CREDENTIALS }}
        run: |
          echo "$KUBECONFIG_DATA" | base64 --decode > kubeconfig.yaml

      - name: Restart Rollout
        run: |
          kubectl rollout restart deployment bbn-bot -n bbn-one --kubeconfig=kubeconfig.yaml